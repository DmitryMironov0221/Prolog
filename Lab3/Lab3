implement main
    open core, file, stdio

domains
    genre = боевик; приключения; триллер; фантастика.
    показжанр = показжанр(string Название_Кинотеатра, string Адрес, string Название_Кинофильма).

class facts - kino
    кинотеатр : (integer Id_КТ, string Название_Кинотеатра, string Адрес, string Телефон, integer Количество_мест).
    кинофильм : (integer Id_КФ, string Название_Кинофильма, integer Год, string Режисер, genre Жанр).
    показывают : (integer Id_КТ, integer Id_КФ, string Дата, string Время, integer Выручка).

class predicates  %Вспомогательные предикаты
    длина : (A*) -> integer N.
    сумма_элем : (real* List) -> real Sum.

clauses
    длина([]) = 0.
    длина([_ | T]) = длина(T) + 1.

    сумма_элем([]) = 0.
    сумма_элем([H | T]) = сумма_элем(T) + H.

class predicates
    адрес_кинотеатра : (string Название_Кинотеатра) -> string* Адреса.
    кинотеатр_показывающий_фильм : (string Название_Кинофильма) -> string* Названия determ.
    название_кинотеатра_показывающего_фильм_определенного_жанра : (genre Жанр) -> показжанр* Название.
    выручка : (string Название_Кинофильма) -> real Выручка determ.
    кол_кин : (string Название_Кинофильма) -> integer N determ.

clauses
% Адрес кинотеатра
    адрес_кинотеатра(X) = List2 :-
        !,
        List2 = [ A || кинотеатр(_, X, A, _, _) ].
% Кинотеатр, показывающий определенный фильм
    кинотеатр_показывающий_фильм(NameF) = NM :-
        кинофильм(ID_KF, NameF, _, _, _),
        !,
        NM =
            [ Name ||
                показывают(ID_KT, ID_KF, _, _, _),
                кинотеатр(ID_KT, Name, _, _, _)
            ].

    кол_кин(X) = длина(кинотеатр_показывающий_фильм(X)).

% Адрес и название кинотеатра, показывающего фильм определенного жанра
    название_кинотеатра_показывающего_фильм_определенного_жанра(X) = List :-
        List =
            [ показжанр(Name, Y, Name_KF) ||
                показывают(ID_KT, ID_KF, _, _, _),
                кинофильм(ID_KF, Name_KF, _, _, X),
                кинотеатр(ID_KT, Name, Y, _, _)
            ],
        !.

%выручка всех кинотеатров с определенного фильма
    выручка(X) = сумма_элем([ VR || показывают(_, ИД, _, _, VR) ]) :-
        кинофильм(ИД, X, _, _, _),
        !.

class predicates  %Вывод на экран время и кинотетра, где показывают фильм
    write_pokasjanr : (показжанр* Название_И_Адрес_Кинотеатра).
clauses
    write_pokasjanr(L) :-
        foreach показжанр(Name_KT, Adress, Name_KF) = list::getMember_nd(L) do
            Length = string::length(Name_KF),
            if Length > 20 then
                writef(string::format("%23s %15s %50s\n", Name_KT, Adress, Name_KF))
            else
                writef(string::format("%23s %15s %32s\n", Name_KT, Adress, Name_KF))
            end if,
            writef("\t---------------+-------------------+------------------------------------------------\n")
        end foreach.

clauses
    run() :-
        console::init(),
        reconsult("..\\film.txt", kino),
        fail.

    run() :-
        X = "Титан",
        write("\nПравило: Адреса кинотеатра \"", X, "\"\n"),
        L = адрес_кинотеатра(X),
        write(L, " \n"),
        write("\n"),
        fail.

    run() :-
        X = "Веном 2",
        write("Правило: кинотеатр показывающий фильм \"", X, "\"\n"),
        write("P.S. У кинотеатров разные адреса\n"),
        L = кинотеатр_показывающий_фильм(X),
        write(L, " \n"),
        write("Количество кинотеатров= "),
        write(кол_кин(X), "\n\n"),
        nl,
        fail.

    run() :-
        write("Правило: адрес и название кинотеатра показывающего фильм определенного жанра \n"),
        X = триллер,
        write("Жанр =  ", X, "\n"),
        writef(string::format("%21s %15s %35s \n", "Название КТ", " Адрес", "Название КФ")),
        writef("\t---------------+-------------------+------------------------------------------------\n"),
        write_pokasjanr(название_кинотеатра_показывающего_фильм_определенного_жанра(X)),
        write("\n"),
        fail.
    run() :-
        X = "Человек-паук",
        write("Правило: Выручка всех кинотеатров за фильм :", X, "\n"),
        L = выручка(X),
        write("Выручка = ", L, " \n\n"),
        fail.

    run() :-
        succeed.

end implement main

goal
    console::runUtf8(main::run).
